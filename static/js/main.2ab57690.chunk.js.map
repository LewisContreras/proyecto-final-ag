{"version":3,"sources":["types/types.js","store/store.js","components/reducers/authReducer.js","firebase/firebase-config.js","components/actions/auth.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PublicRouter.js","routers/PrivateRouter.js","components/Chat/ReceivedMessage.jsx","components/Chat/SentMessage.jsx","components/Chat/ContentChat.jsx","components/Chat/HeaderChat.jsx","containers/Chat.jsx","components/MainPage/ArrowUpMainPage.jsx","components/MainPage/EachPetCard.jsx","components/MainPage/CardsContainer.jsx","components/MainPage/HeaderMainPage.jsx","containers/MainPage.jsx","components/PetDetailView/ImageDetailView.jsx","components/PetDetailView/InfoDetailView.jsx","containers/PetDetailView.jsx","components/PostPage/ContentPost.jsx","components/PostPage/HeaderPost.jsx","containers/PostPage.jsx","routers/Routes.jsx","routers/AppRouter.js","App.js","index.js"],"names":["types","reducers","combineReducers","auth","state","action","uid","payLoad","name","displayName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","GoogleAuthProvider","login","type","payload","logout","LoginScreen","dispatch","useDispatch","height","alignItems","justifyContent","background","direction","p","rounded","mt","mb","boxSize","src","alt","leftIcon","colorScheme","variant","onClick","e","signInWithPopup","then","user","console","log","catch","Swal","fire","icon","title","text","showClass","popup","hideClass","AuthRouter","className","exact","path","component","to","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","ReceivedMessage","fontWeight","maxWidth","color","borderRadius","backgroundColor","padding","alignSelf","SentMessage","ContentChat","spacing","minHeight","position","bottom","width","HeaderChat","history","useHistory","flexDirection","bg","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","goBack","fontSize","top","left","as","FaArrowLeft","Chat","ArrowUpMainPage","scrollTo","behavior","right","FaArrowUp","EachPetCard","CardsContainer","wrap","mx","Array","fill","map","el","index","ReachLink","id","HeaderMainPage","px","FaPaw","pointerEvents","children","placeholder","a","signOut","MainPage","ImageDetailView","cursor","InfoDetailView","aux","document","createElement","setAttribute","location","href","split","body","appendChild","select","execCommand","removeChild","getLink","rightIcon","FaUser","PetDetailView","ContentPost","pt","MdPhoto","HeaderPost","FaHome","PostPage","Routes","AppRouter","useState","checking","setChecking","isLooggedIn","setIsLooggedIn","useEffect","onAuthStateChanged","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2ab57690.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[ui] Set Error',\r\n    uiRemoveError: '[ui] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../components/reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        //Se requiere la libreria Thunk que permite tener la comunicación directa con el middleware, la dependencia de la BD Firebase y validación de los campos con validator\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import {types} from '../../types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.types) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payLoad.uid,\r\n                name: action.payLoad.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return{}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCgsrjF18DOmeDBHbd9wBkbxpqRHJu7L-w\",\r\n    authDomain: \"bd-find-pet.firebaseapp.com\",\r\n    projectId: \"bd-find-pet\",\r\n    storageBucket: \"bd-find-pet.appspot.com\",\r\n    messagingSenderId: \"649767277617\",\r\n    appId: \"1:649767277617:web:09884fa40e950156a8b110\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n//Almacena la info de la DB\r\nconst db = firebase.firestore();\r\n\r\n//Proveedor de google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };","import {types} from '../../types/types'\r\nimport {firebase, googleAuthProvider} from '../../firebase/firebase-config'\r\nimport { startLoading, finishLoading } from '../actions/uiError'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                console.log(user)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'No seleccionó ninguna cuenta de Google!',\r\n                    showClass: {\r\n                        popup: 'animate__animated animate__fadeInDown'\r\n                    },\r\n                    hideClass: {\r\n                        popup: 'animate__animated animate__fadeOutUp'\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n        dispatch(logout())\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { startGoogleLogin } from '../actions/auth'\r\nimport { Flex, Heading, Box, Image, Button } from \"@chakra-ui/react\"\r\nimport Normalize from 'react-normalize';\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleGoogle = (e) => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Normalize />\r\n            <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\" background=\"#d8f8b7\">\r\n                <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\" background=\"#a3d2ca\" p={12} rounded={6}>\r\n                    <Heading mt={20} mb={25}>Log In PetFind</Heading>\r\n                    <Box>\r\n                        <Image\r\n                            rounded={100}\r\n                            boxSize=\"200px\"\r\n                            src=\"https://image.freepik.com/vector-gratis/lindo-perro-gato-amigo-caricatura_138676-2432.jpg\"\r\n                            alt=\"Logo FindPet\"\r\n                        />\r\n                    </Box>\r\n                    <Button\r\n                        leftIcon={<FcGoogle />}\r\n                        mt={20}\r\n                        mb={20}\r\n                        colorScheme=\"teal\"\r\n                        variant=\"outline\"\r\n                        onClick={handleGoogle}\r\n                    >\r\n                        Iniciar Sesion con Google\r\n                    </Button>\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import { Flex } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction ReceivedMessage() {\r\n    return (\r\n        <Flex fontWeight=\"500\" maxWidth=\"80%\" color=\"#33A109\" borderRadius=\"10px\" backgroundColor=\"white\" padding={2} alignSelf=\"flex-start\" >\r\n            Hola, cómo estás? puedo preguntar algo?\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default ReceivedMessage\r\n","import { Flex } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction SentMessage() {\r\n    return (\r\n        <Flex maxWidth=\"80%\" color=\"white\" borderRadius=\"10px\" backgroundColor=\"#33A109\" padding={2} alignSelf=\"flex-end\" >\r\n            Hola, cómo estás? puedo preguntar algo?\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default SentMessage\r\n","import { Input } from '@chakra-ui/input'\r\nimport { VStack } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport ReceivedMessage from './ReceivedMessage'\r\nimport SentMessage from './SentMessage'\r\n\r\nfunction ContentChat() {\r\n    return (\r\n        <VStack spacing={4} padding={4} minHeight=\"80vh\" backgroundColor=\"#77D353\" >\r\n            <SentMessage/>\r\n            <ReceivedMessage/>\r\n            <Input position=\"fixed\" backgroundColor=\"white\" type=\"text\" height=\"50px\" bottom=\"20px\" width=\"90%\"  />\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default ContentChat\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Box, Center, Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\nfunction HeaderChat() {\r\n    const history = useHistory()\r\n    return (\r\n        <Center flexDirection=\"column\" position=\"relative\" bg=\"#33A109\" height=\"20vh\">\r\n            <Box backgroundImage=\"url('https://www.nicepng.com/png/detail/202-2022264_usuario-annimo-usuario-annimo-user-icon-png-transparent.png')\" backgroundPosition=\"center\" backgroundSize=\"cover\" backgroundRepeat=\"no-repeat\"  borderRadius=\"50%\" width=\"64px\" height=\"64px\" >\r\n            </Box>\r\n            <Text fontWeight=\"600\" mt={2} color=\"white\" >Contacto</Text>\r\n\r\n            <Icon onClick={()=>history.goBack()} fontSize=\"30px\" color=\"white\" position=\"absolute\" top=\"calc(50%-30px)\" left={8} as={FaArrowLeft} />\r\n\r\n        </Center>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeaderChat\r\n","import { Box} from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport ContentChat from '../components/Chat/ContentChat'\r\nimport HeaderChat from '../components/Chat/HeaderChat'\r\n\r\n\r\nfunction Chat() {\r\n    return (\r\n        <Box>\r\n            <HeaderChat/>\r\n            <ContentChat/>\r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Center } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaArrowUp } from 'react-icons/fa'\r\n\r\nfunction ArrowUpMainPage() {\r\n    return (\r\n        <Center onClick={()=>window.scrollTo({\r\n            top:0,\r\n            behavior: \"smooth\"\r\n        })} height=\"40px\" width=\"40px\" backgroundColor=\"#33A109\" position=\"fixed\" bottom=\"0\" right=\"40px\" >\r\n            <Icon color=\"white\" fontSize={20} as={FaArrowUp} />\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default ArrowUpMainPage\r\n","import { Image } from '@chakra-ui/image'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction EachPetCard() {\r\n    return (\r\n        <Box mb=\"20px\"  width=\"160px\"\r\n         height=\"200px\" backgroundColor=\"#77D353\" >\r\n            <Image height=\"80%\" src=\"https://www.hola.com/imagenes/estar-bien/20190820147813/razas-perros-pequenos-parecen-grandes/0-711-550/razas-perro-pequenos-grandes-m.jpg\" />\r\n            <Text color=\"white\" >Desaparecido</Text>\r\n        </Box>       \r\n    )\r\n}\r\n\r\nexport default EachPetCard\r\n","import { Flex, Link } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport EachPetCard from './EachPetCard.jsx'\r\nimport { Link as ReachLink } from 'react-router-dom';\r\n\r\nfunction CardsContainer() {\r\n    return (\r\n        <Flex justifyContent=\"space-between\" wrap=\"wrap\" mt=\"100px\" width=\"90%\" mx=\"auto\">\r\n            {\r\n                Array(8).fill(\"\").map((el, index) => <Link key={index} as={ReachLink} to={`/detail/${index}`} ><EachPetCard id={index}  /></Link> )\r\n            }\r\n            \r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default CardsContainer\r\n","import React from 'react'\r\nimport {FaPaw, FaSearch} from \"react-icons/fa\"\r\nimport {FcExport} from \"react-icons/fc\"\r\nimport { Input, InputGroup, InputLeftElement } from '@chakra-ui/input'\r\nimport {HStack, Link } from '@chakra-ui/layout'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Link as ReachLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogout } from '../actions/auth'\r\n\r\n\r\nfunction HeaderMainPage() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <HStack id=\"header-main-page\" px={4} spacing={8} backgroundColor=\"#33A109\"  height=\"80px\" position=\"fixed\" top=\"0\" left=\"0\" right=\"0\" >\r\n            <Icon fontSize={20} color=\"white\" as={FaPaw}  />\r\n            <InputGroup>\r\n                <InputLeftElement\r\n                pointerEvents=\"none\"\r\n                children={<FaSearch />}\r\n                />\r\n                <Input type=\"text\" placeholder=\"Search\" color=\"black\" backgroundColor=\"white\" />\r\n            </InputGroup>\r\n           <Link color=\"white\" to=\"/post\" as={ReachLink} > Publicar</Link>\r\n           <Link onClick={ handleClickLogout }><FcExport /></Link>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default HeaderMainPage\r\n","\r\nimport { Box} from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport ArrowUpMainPage from '../components/MainPage/ArrowUpMainPage'\r\nimport CardsContainer from '../components/MainPage/CardsContainer'\r\n\r\nimport HeaderMainPage from '../components/MainPage/HeaderMainPage.jsx'\r\n\r\nfunction MainPage() {\r\n    return (\r\n        <Box>\r\n            <HeaderMainPage/>\r\n            <ArrowUpMainPage/>\r\n            <CardsContainer/>\r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Center } from '@chakra-ui/layout'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport {FaArrowLeft} from \"react-icons/fa\"\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\nfunction ImageDetailView() {\r\n    const history = useHistory()\r\n    return (\r\n        <Box position=\"relative\" backgroundImage=\"url('https://www.hola.com/imagenes/estar-bien/20190820147813/razas-perros-pequenos-parecen-grandes/0-711-550/razas-perro-pequenos-grandes-m.jpg')\"  height=\"50vh\" backgroundPosition=\"center\" backgroundRepeat=\"no-repeat\" backgroundSize=\"cover\" >\r\n\r\n            <Center onClick={()=> history.goBack()} cursor=\"pointer\" boxSize={10} borderRadius=\"50%\" backgroundColor=\"#33A109\" position=\"absolute\" top=\"20px\" left=\"20px\">\r\n                <Icon color=\"white\"  as={FaArrowLeft} />\r\n            </Center>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ImageDetailView\r\n","import { Button } from '@chakra-ui/button'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Link, Text } from '@chakra-ui/layout'\r\nimport { HStack } from '@chakra-ui/layout'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaShare, FaUser } from 'react-icons/fa'\r\nimport { Link as ReachLink } from 'react-router-dom';\r\n\r\nfunction InfoDetailView() {\r\n\r\n    const getLink =()=>{\r\n        var aux = document.createElement(\"input\");\r\n        aux.setAttribute(\"value\",window.location.href.split('?')[0].split('#')[0]);\r\n        document.body.appendChild(aux);\r\n        aux.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(aux);\r\n        }\r\n\r\n    return (\r\n        <Box padding={6} position=\"relative\" minHeight=\"50vh\" backgroundColor=\"#77D353\" >\r\n            <Button onClick={()=>getLink()} position=\"absolute\" top=\"20px\" right=\"20px\" color=\"white\" backgroundColor=\"#33A109\"  rightIcon={<FaShare color=\"white\" />} >Compartir</Button>\r\n            <Text fontSize=\"xl\" color=\"white\" >Nombre</Text>\r\n            <Text fontSize=\"xl\"  color=\"white\" >Raza</Text>\r\n            <Text fontSize=\"xl\"  color=\"white\" >Dirección</Text>\r\n            <Text fontSize=\"xl\"  color=\"white\" >Detalles</Text>\r\n            <Text fontSize=\"xl\"  color=\"white\" >Lorem ipsum dolor sit, amet consectetur adipisicing elit. Repellat maxime consequuntur doloremque alias rem illum autem deserunt debitis. Lorem rem illum autem deserunt debitis. Lorem</Text>\r\n            <HStack justifyContent=\"space-between\" mt={4}>\r\n                <Icon fontSize={30} color=\"white\"  as={FaUser} />\r\n                <Link to=\"/chat\"  as={ReachLink} >\r\n                    <Button color=\"white\" backgroundColor=\"#33A109\" >Contactar</Button>\r\n                </Link>\r\n            </HStack>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoDetailView\r\n","import { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport ImageDetailView from '../components/PetDetailView/ImageDetailView'\r\nimport InfoDetailView from '../components/PetDetailView/InfoDetailView'\r\n\r\nfunction PetDetailView() {\r\n    return (\r\n        <Box>\r\n            <ImageDetailView/>\r\n            <InfoDetailView/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PetDetailView\r\n","import { Button } from '@chakra-ui/button'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Center, HStack } from '@chakra-ui/layout'\r\nimport { Textarea } from '@chakra-ui/textarea'\r\nimport React from 'react'\r\nimport {MdPhoto} from \"react-icons/md\"\r\n\r\nfunction ContentPost() {\r\n    return (\r\n        <Center flexDirection=\"column\" pt=\"100px\" px={6} backgroundColor=\"#77D353\" minHeight=\"100vh\">\r\n            <Textarea height=\"300px\" backgroundColor=\"white\" placeholder=\"Coloca la información de tu mascota, trata de dar la mayor cantidad de detalles posibles...\" />\r\n            <HStack width=\"100%\" justifyContent=\"space-between\" px=\"16px\" borderRadius=\"0 0 10px 10px\" position=\"relative\" top=\"-10px\" height=\"60px\" backgroundColor=\"#33A109\" > \r\n                <Icon fontSize={30} color=\"white\" as={MdPhoto} />\r\n                <Button color=\"#33A109\" >Publicar</Button>   \r\n            </HStack>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default ContentPost\r\n","import Icon from '@chakra-ui/icon'\r\nimport { HStack, Link } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaHome } from 'react-icons/fa'\r\nimport { Link as ReachLink } from 'react-router-dom';\r\n\r\nfunction HeaderPost() {\r\n    return (\r\n        <HStack position=\"fixed\" top=\"0\" width=\"100%\" padding={6} height=\"80px\" backgroundColor=\"#33A109\" >\r\n            <Link to=\"/\" as={ReachLink} >\r\n                <Icon fontSize={30} color=\"white\" as={FaHome} />\r\n            </Link>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default HeaderPost\r\n","import { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport ContentPost from '../components/PostPage/ContentPost'\r\nimport HeaderPost from '../components/PostPage/HeaderPost'\r\n\r\nfunction PostPage() {\r\n    return (\r\n        <Box>\r\n            <HeaderPost/>\r\n            <ContentPost/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostPage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Chat from '../containers/Chat';\r\nimport MainPage from '../containers/MainPage';\r\nimport PetDetailView from '../containers/PetDetailView';\r\nimport PostPage from '../containers/PostPage';\r\n\r\n\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={MainPage} />\r\n                <Route exact path=\"/post\" component={PostPage} /><Route exact path=\"/detail/:id\" component={PetDetailView} />\r\n                <Route exact path=\"/chat\" component={Chat} />\r\n            </Switch>\r\n        </Router>\r\n)\r\n}\r\n\r\nexport default Routes\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../components/actions/auth'\r\nimport { PublicRoute } from './PublicRouter';\r\nimport { PrivateRoute } from './PrivateRouter';\r\nimport Routes from './Routes.jsx'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    //Estado para comprobar si el Usuario está registrado\r\n    const [checking, setChecking] = useState(true)\r\n\r\n    //Estado para controlar si inició sesión o no\r\n    const [isLooggedIn, setIsLooggedIn] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) =>{\r\n            // console.log(user) Se muestra por consola la información del user logeado\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName))\r\n\r\n                //Actualizamos el Estado cuando inicie sesión\r\n                setIsLooggedIn(true)\r\n            }else{\r\n                console.log(\"Usuario no Registrado\")\r\n                //Actualizamos el Estado si no inicia sesión\r\n                setIsLooggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if(checking){\r\n        return(\r\n            <h2>Espere por favor</h2>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated = {isLooggedIn}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={Routes}\r\n                        isAuthenticated = {isLooggedIn}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n \r\nexport const App = () => {\r\n    return (\r\n        <ChakraProvider>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </ChakraProvider>\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}